% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tad_consensus_hierarchy.R
\name{generate_tad_consensus_hierarchy}
\alias{generate_tad_consensus_hierarchy}
\title{Generate hierarchical consensus TADs through iterative rounds}
\usage{
generate_tad_consensus_hierarchy(
  df_tools,
  threshold = 0,
  step = -0.05,
  split_vars = c("chr"),
  max_round = 10,
  include_isolated = FALSE,
  consider_level = FALSE
)
}
\arguments{
\item{df_tools}{Data frame containing TAD information with columns: chr, start, end, meta.tool}

\item{threshold}{Numeric value, the minimum threshold for MoC filtering, default is 0}

\item{step}{Numeric vector, sequence of threshold values to use in the iterative
selection process, default is -0.05}

\item{split_vars}{Character vector, variables to split data by for parallel processing,
default is c("chr")}

\item{max_round}{Integer, maximum number of rounds to perform. If NULL, continues
until no more TADs remain in the input data. Default is 10}

\item{include_isolated}{Logical, whether to include isolated TADs (with no overlaps) when threshold is 0, default is FALSE}

\item{consider_level}{Logical, whether to consider meta.tool_level when filtering overlaps, default is FALSE}
}
\value{
Data frame containing all consensus TADs with round information
}
\description{
This function generates consensus TADs through multiple rounds of iteration.
In each round, it identifies consensus TADs and removes partially overlapping
regions from the input data for the next round. This hierarchical approach
helps identify TADs at different levels of consensus strength.

Parallel processing is controlled by the future framework. Configure it before calling:
future::plan(future::multisession(workers = 4))
}
\examples{
\dontrun{
# Basic usage
result <- generate_tad_consensus_hierarchy(tad_data, max_round = 5)

# Parallel processing
options(future.globals.maxSize = 100 * 1024^3)
future::plan(future::multisession(workers = 4))
result <- generate_tad_consensus_hierarchy(tad_data, max_round = 5)
future::plan(future::sequential)

# With tool levels
tad_data_with_level <- data.frame(
  chr = rep("chr1", 8),
  start = c(10000, 15000, 20000, 50000, 55000, 15000, 50000, 80000),
  end = c(30000, 35000, 45000, 70000, 75000, 35000, 70000, 100000),
  meta.tool = c("tool1", "tool1", "tool2", "tool3", "tool3", "tool2", "tool1", "tool4"),
  meta.tool_level = c("L1", "L2", NA, "L1", "L2", NA, "L2", NA)
)

result_with_level <- generate_tad_consensus_hierarchy(
  tad_data_with_level,
  max_round = 3,
  consider_level = TRUE
)
}

}
